name: CI/CD
on:
  push:
    branches:
      - master

jobs:
  CI:
   runs-on: ubuntu-latest

   steps:
   - name: Checkout code
     uses: actions/checkout@v2

   - name: Set up JDK 17
     uses: actions/setup-java@v2
     with:
       distribution: 'adopt'
       java-version: '17'

   - name: Read Old Version
     id: read-old-version
     run: echo "::set-output name=old_version::$(cat myapp/version.txt)"

   - name: Increment Patch Version
     id: increment-patch-version
     run: |
       # Set the new version
       new_version="1.0.${GITHUB_RUN_NUMBER}"

       echo "::set-output name=patch_version::${new_version}"
       echo "New Version: ${new_version}" > myapp/version.txt 

   - name: Update Version $ Pom File
     run: |
      sed -i "0,/<version>[^<]*<\/version>/ s|<version>[^<]*</version>|<version>${{ steps.update-app-version.outputs.patch_version }}-SNAPSHOT</version>|" myapp/pom.xml
            
   - name: Commit and push version file
     run: |
       git config user.name "GitHub Actions"
       git config user.email "actions@github.com"
       git add version.txt
       git add pom.xml
       git commit -m "Update pom.xml,version.txt with ${{ steps.update-app-version.outputs.patch_version }}"
       git push

   - name: Build and push Docker image
     env:
       PATCH_VERSION: ${{ steps.update-app-version.outputs.patch_version }}
       DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
       DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}        
     run: |
       docker build --build-arg APP_VERSION=$PATCH_VERSION -t myapp:$PATCH_VERSION .
       docker build -t myapp:$PATCH_VERSION .
       echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
       docker tag myapp:$PATCH_VERSION $DOCKER_USERNAME/myapp:$PATCH_VERSION
       docker push $DOCKER_USERNAME/maven-hello-world:$PATCH_VERSION
  CD:
    runs-on: ubuntu-latest
    needs: CI
    steps:
    - name: Download Docker image and run
      env:
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin
        docker pull $DOCKER_USERNAME/myapp:${{ needs.update-app-version.PATCH_VERSION }}
        docker run -d --name myapp-container -p 8080:8080 $DOCKER_USERNAME/myapp:${{ needs.update-app-version.outputs.PATCH_VERSION }}
    # # helm deployment
    # - name: Checkout code
    #   uses: actions/checkout@v2

    # - name: Deploy with Helm
    #   run: |
    #     helm upgrade --install myapp myapp-chart -f helm/values.yaml